vim9script

if has("win32") || has("win64")
    # set runtimepath+=$HOME/.vim
    set packpath+=$HOME/.vim
endif

import expand("~/.vim/vimrcs/zy.vim")
var packs = [
    {
        name: "bundle",
        start: [
            # For better editting
            { url: "editorconfig/editorconfig-vim" },
            { url: "jiangmiao/auto-pairs" },
            { url: "jlanzarotta/bufexplorer" },
            { url: "preservim/nerdtree" },
            { url: "dense-analysis/ale" },
            { url: "itchyny/lightline.vim" },
            { url: "tpope/vim-surround" },
            { url: "tpope/vim-commentary" },
            { url: "tpope/vim-abolish" },
            { url: "terryma/vim-expand-region" },
            { url: "mg979/vim-visual-multi" },
            { url: "yegappan/mru" },
            { url: "junegunn/fzf" },
            { url: "junegunn/fzf.vim" },
            { url: "voldikss/vim-floaterm" },

            # For bettoer programming
            { url: "maximbaz/lightline-ale" },
            # { url: "sirver/ultisnips" },
            # { url: "honza/vim-snippets" },

            # For syntaxing
            { url: "rust-lang/rust.vim" },
            { url: "fatih/vim-go" },

            # GIT intergration
            { url: "tpope/vim-fugitive" },
            { url: "airblade/vim-gitgutter" },
        ],
    },
    {
        name: "colors",
        opt: [
            { url: "sainnhe/sonokai" }
        ],
    }
]

const z = zy.Zy.new("~/.cache/zy", "~/.vim")

# Use ghproxy to download from github
const EditUrl = (v) => "https://ghproxy.com/https://github.com/" .. v
for p in packs
    if (has_key(p, "start"))
        for pl in p.start
            pl.url = EditUrl(pl.url)
        endfor
    endif

    if (has_key(p, "opt"))
        for pl in p.opt
            pl.url = EditUrl(pl.url)
        endfor
    endif
endfor

z.Install(packs, true)

source ~/.vim/vimrcs/basic.vim
source ~/.vim/vimrcs/filetypes.vim
source ~/.vim/vimrcs/plugins_config.vim
source ~/.vim/vimrcs/extended.vim

try
    source ~/.vimrc.local
catch
endtry
